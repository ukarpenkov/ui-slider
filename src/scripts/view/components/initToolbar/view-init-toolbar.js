"use strict";
exports.__esModule = true;
var store_1 = require("../../../model/store");
function initToolBar(wrapper) {
    var state = store_1.store.getState();
    var renderToolBar = function (data) {
        return data.map(function (item) {
            return $("\n      <div class=\"control-panel ".concat(item.id, "\">\n      <div class=\"control-panel__text-inputs\">\n      <input title=\"\u041C\u0438\u043D\u0438\u043C\u0430\u043B\u044C\u043D\u043E \u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435\" class=\"control-panel__text-input js-min-scale\" type=\"number\" min=").concat(item.minScale, " max=").concat(item.maxScale, " value=").concat(item.minScale, " placeholder=\"min scale value\" name=\"minScale\"/>\n      <input title=\"\u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u043E \u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435\" class=\"control-panel__text-input js-max-scale\" type=\"number\" min=").concat(item.minScale, " max=").concat(item.maxScale, " value=").concat(item.maxScale, "   placeholder=\"max scale value\" name=\"maxScale\" />\n      <input title=\"\u0428\u0430\u0433\"  class=\"control-panel__text-input js-scale-step\" type=\"number\" value=").concat(item.step, " min=0  placeholder=\"scale step\" name=\"scaleStep\"/>\n      <input title=\"\u0422\u0435\u043A\u0443\u0449\u0435\u0435 \u043C\u0438\u043D\u0438\u043C\u0430\u043B\u044C\u043D\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435\" class=\"control-panel__text-input js-min-pos\" type=\"number\" min=").concat(item.minScale, " max=").concat(item.maxScale, " value=").concat(item.minValue, " placeholder=\"first slider position\" name=\"minPosition\"/>\n      <input title=\"\u0422\u0435\u043A\u0443\u0449\u0435\u0435 \u043C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435\"  class=\"control-panel__text-input js-max-pos\" type=\"number\" min=").concat(item.minScale, " max=").concat(item.maxScale, " value=").concat(item.maxValue, " placeholder=\"second slider position\" name=\"maxPosition\"/>\n      </div>\n      <div class=\"control-panel__checkbox-inputs\">\n      <div class=\"control-panel__checkbox-item\">\n      <input class=\"control-panel__checkbox-input js-vertical-or-horizontal\" type=\"checkbox\" name=\"verticalOrHorizontal\"\n      ").concat(item.orientation === 'vertical' ? 'checked' : '', "\n      />\n      <label for=\"verticalOrHorizontal\" data-onlabel=\"on\" data-offlabel=\"off\" class=\"control-panel__label\">vertical/horizontal</label>\n      </div>\n      <div class=\"control-panel__checkbox-item\">\n      <input class=\"control-panel__checkbox-input js-single-or-range\" type=\"checkbox\" name='singleOrRange'\n      ").concat(item.interval === 'single' ? 'checked' : '', "\n      />\n      <label for=\"singleOrRange\" data-onlabel=\"on\" data-offlabel=\"off\" class=\"control-panel__label\">single/range</label>\n      </div>\n      <div class=\"control-panel__checkbox-item\">\n      <input class=\"control-panel__checkbox-input\" type=\"checkbox\"   name='progressBar'\n      ").concat(item.valueBlock === true ? 'checked' : '', "/>\n      <label for=\"progressBar\" data-onlabel=\"on\" data-offlabel=\"off\" class=\"control-panel__label\">progress-bar</label>\n      </div>\n      <div class=\"control-panel__checkbox-item\">\n      <input class=\"control-panel__checkbox-input\" type=\"checkbox\"  name='scaleRange'\n      ").concat(item.tooltip === true ? 'checked' : '', " />\n      <label for=\"scaleRange\" data-onlabel=\"on\" data-offlabel=\"off\" class=\"control-panel__label\">tooltips</label>\n      </div>\n      </div>\n      </div>"));
        });
    };
    $(wrapper).append(renderToolBar(state));
}
exports["default"] = initToolBar;
